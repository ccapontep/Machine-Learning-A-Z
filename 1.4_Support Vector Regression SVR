@author: Cecilia Aponte
Udemy - Machine Learning A-Z
SVR
"""
###Importing the libraries
import numpy as np 
import matplotlib.pyplot as plt 
import pandas as pd 

###Importing the dataset
dataset = pd.read_csv('Position_Salaries.csv')
X = dataset.iloc[:, 1:2]. values  
y = dataset.iloc[:, 2:3].values  

### Feature Scaling
from sklearn.preprocessing import StandardScaler 
sc_X = StandardScaler() 
sc_y = StandardScaler() 
X = sc_X.fit_transform(X) 
y = sc_y.fit_transform(y)

### Fitting SVR to the dataset
from sklearn.svm import SVR 
regressor = SVR('rbf') # use kernel "rbf" because problem is non-linear and want to use Gaussian
regressor.fit(X, y)

### Predicting new result 
y_pred = sc_y.inverse_transform(regressor.predict(sc_X.transform(np.array([[6.5]])))) 
# Transform 6.5 to scale used in feature scaling. Then inverse transform to get the original scale w/o feature scaling of the y result

###Visualising the SVR results 
plt.scatter(X, y, color = 'red')
plt.plot(X, regressor.predict(X), color = 'blue')
plt.title('Truth or Bluff (SVR)')
plt.xlabel('Position Level')
plt.ylabel('Salary')
plt.show()

# not fitting the CEO correctly bc SVR considers it as an outlier so didn't include it in the model

###Visualising the SVR results(for higher resolution and smoother curve)
X_grid = np.arange(min(X), max(X), 0.1)
X_grid = X_grid.reshape(len(X_grid), 1)
plt.scatter(X, y, color = 'red')
plt.plot(X_grid, regressor.predict(X_grid), color = 'blue')
plt.title('Truth or Bluff (SVR Model)')
plt.xlabel('Position Level')
plt.ylabel('Salary')
plt.show()



